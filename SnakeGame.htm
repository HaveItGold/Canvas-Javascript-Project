<!doctype html>
<html>
<head>
  <title>Luca's Snake Game</title>
  <style>
  html, body {
    height: 100%;
    margin: 0;
  }

  body {
    background: black;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  canvas {
    border: 1px solid white;
  }

  </style>
</head>
<body>
<!--Game canvas-->
<canvas width="400" height="400" id="game"></canvas>
<script>
var canvas = document.getElementById('game');
var context = canvas.getContext('2d');

var grid = 16;
var count = 0;
  
var snake = {
  x: 160,
  y: 160,
  
  // snake speed (1 grid/s)
  dx: grid,
  dy: 0,
  
  // all grids of snake
  cells: [],
  
  // snake length
  maxCells: 4
};

var apple = {
  x: 320,
  y: 320
};

// NOT WORKING YET, FIX
function randomSnakeColor() { 
  var characters = "abcdef1234567890";  
                
  //strin length 
  var lenString = 6;  
  var randomstring = '#';  

  //loop until string complete
  for (var i=0; i<lenString; i++) {  
      var rnum = Math.floor(Math.random() * characters.length);  
      randomstring += characters.substring(rnum, rnum+1);
  }  
  return randomstring
}

var snakeColor = randomSnakeColor()

// loop game
function loop() {
  requestAnimationFrame(loop);

  // slower game speed
  if (++count < 4) {
    return;
  }

  count = 0;
  context.clearRect(0,0,canvas.width,canvas.height);

  // move snake
  snake.x += snake.dx;
  snake.y += snake.dy;

  // tracks snake location
  snake.cells.unshift({x: snake.x, y: snake.y});

  // moving tail (by taking it away)
  if (snake.cells.length > snake.maxCells) {
    snake.cells.pop();
  }

  // draw apple
  context.fillStyle = 'red';
  context.fillRect(apple.x, apple.y, grid-1, grid-1)

  // draw snake one cell at a time
  context.fillStyle = snakeColor;
  snake.cells.forEach(function(cell, index) {
    
    // making snake cells separate
    context.fillRect(cell.x, cell.y, grid-1, grid-1);  

    // check collision with all cells after this one (modified bubble sort)
    for (var i = index + 1; i < snake.cells.length; i++) {
      
      // checks if snake has crashed (if so, reset game)
      if (cell.x === snake.cells[i].x && cell.y === snake.cells[i].y) {
        snake.x = 160;
        snake.y = 160;
        snake.cells = [];
        snake.maxCells = 4;
        snake.dx = grid;
        snake.dy = 0;
      }
    }
  });
}

// checks what key is being pressed
document.addEventListener('keydown', function(e) {
  
  // left arrow
  if (e.which === 37 && snake.dx === 0) {
    snake.dx = -grid;
    snake.dy = 0;
  }
  // up arrow
  else if (e.which === 38 && snake.dy === 0) {
    snake.dy = -grid;
    snake.dx = 0;
  }
  // right arrow
  else if (e.which === 39 && snake.dx === 0) {
    snake.dx = grid;
    snake.dy = 0;
  }
  // down arrow
  else if (e.which === 40 && snake.dy === 0) {
    snake.dy = grid;
    snake.dx = 0;
  }
});

// start the game & keeps game running
requestAnimationFrame(loop);
</script>
</body>
</html>